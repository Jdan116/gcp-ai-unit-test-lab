plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.9'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // GCP libs (you can collapse duplicates later if you like)
    implementation 'org.springframework.cloud:spring-cloud-gcp-starter-pubsub:1.2.8.RELEASE'
    implementation 'com.google.cloud:google-cloud-bigquery:2.54.0'
    implementation 'com.google.cloud:google-cloud-storage:2.55.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
}

tasks.test {
    useJUnitPlatform()
    finalizedBy tasks.jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        // Ensure BOTH formats exist
        xml.required = true
        html.required = true

        // Force a stable XML path & format that the GH action can parse
        xml.outputLocation.set(layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml"))
        html.outputLocation.set(layout.buildDirectory.dir("reports/jacoco/test/html"))
    }

    // Keep defaults to avoid empty/partial reports.
    // (If you need excludes later, add them carefully.)
    // classDirectories.setFrom(fileTree(dir: "build/classes/java/main"))
    // sourceDirectories.setFrom(files("src/main/java"))
    // executionData.setFrom(fileTree(dir: "build") { include "**/jacoco/test.exec" })
}
